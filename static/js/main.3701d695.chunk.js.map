{"version":3,"sources":["css/right.module.css","css/left.module.css","Header.js","Left.js","Right.js","ProductData.js","App.js","serviceWorker.js","index.js","css/header.module.css"],"names":["module","exports","Header","className","css","header","img","alt","src","Left","props","currentHour","Date","getHours","currentMinute","getMinutes","left","url","showHeart","heart","class","time","Right","console","log","previewImg","data","colorOptions","map","item","pos","classArr","images","previewImagePos","push","imageBorder","key","join","imageUrl","styleName","onClick","colorOption","buttons","featureList","button","selectedButton","activeButton","featureDisplay","right","title","description","buyButton","ProductData","Object","freeze","App","state","prodObj","setState","updatedState","basename","process","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3701d695.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"right\":\"right_right__1kUEH\",\"images\":\"right_images__26aR3\",\"imageBorder\":\"right_imageBorder__SiWaE\",\"button\":\"right_button__gNOHw\",\"activeButton\":\"right_activeButton__3PQI-\",\"buyButton\":\"right_buyButton__3R1Ej\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"left\":\"left_left__2RgMm\",\"img\":\"left_img__10enA\",\"time\":\"left_time__3w0Wu\",\"heart\":\"left_heart__Ap2p5\",\"beat\":\"left_beat__2myuK\"};","import React from 'react';\r\nimport css from './css/header.module.css';\r\n\r\nconst Header = () => {\r\n\r\n    return(\r\n        \r\n        <header className={css.header}>\r\n            <img className={css.img}\r\n                alt=\"amazon\" \r\n                src=\"https://images-na.ssl-images-amazon.com/images/G/01/gc/designs/livepreview/amazon_dkblue_noto_email_v2016_us-main._CB468775337_.png\">\r\n            </img>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport css from './css/left.module.css';\r\n\r\n\r\nconst Left = (props) => {\r\n\r\n    // console.log(props)\r\n\r\n    const currentHour = new Date().getHours() > 9 ? \r\n    new Date().getHours() : \r\n    '0' + new Date().getHours();\r\n\r\n    const currentMinute = new Date().getMinutes() > 9 ?\r\n    new Date().getMinutes() :\r\n    '0' + new Date().getMinutes();\r\n\r\n    return(\r\n        <aside className={css.left}>\r\n\r\n            <img className={css.img} src={props.url} alt=\"watch\">\r\n\r\n            </img>\r\n\r\n            {\r\n                props.showHeart ?\r\n\r\n                <div className={css.heart}>\r\n                    <i class=\"fas fa-heartbeat\"></i>\r\n                    <p>78</p>\r\n                </div>\r\n                \r\n                :\r\n\r\n                <div className={css.time}>\r\n                    <p>{`${currentHour}:${currentMinute}`}</p>\r\n                </div>\r\n\r\n            }\r\n\r\n        </aside>\r\n\r\n    );\r\n}\r\n\r\nexport default Left;","import React from 'react';\r\n\r\nimport css from './css/right.module.css';\r\n\r\n\r\nconst Right = (props) => {\r\n\r\n    // this comes from App.js \r\n    // <Right data={this.state.prodObj} and it's use here to load content\r\n\r\n    console.log(props);\r\n\r\n    const previewImg = props.data.colorOptions.map((item, pos) => {\r\n\r\n        const classArr = [css.images];\r\n\r\n        if(pos === props.previewImagePos){\r\n\r\n           classArr.push(css.imageBorder); \r\n        }\r\n\r\n        return(\r\n            <img key={pos} \r\n                className={classArr.join(' ')} \r\n                src={item.imageUrl} \r\n                alt={item.styleName} \r\n\r\n                //this func comes from App.js passes as props\r\n\r\n                onClick={() => props.colorOption(pos)}/>\r\n        );\r\n\r\n    })\r\n\r\n    const buttons = props.data.featureList.map((item, pos) => {\r\n\r\n        const classArr = [css.button];\r\n\r\n        if(pos === props.selectedButton){\r\n\r\n            classArr.push(css.activeButton)\r\n        }\r\n\r\n        return(\r\n        <button key={pos} \r\n                className={classArr.join(' ')}\r\n                onClick={() => props.featureDisplay(pos)}>{item}\r\n        </button>\r\n        );\r\n\r\n\r\n\r\n    })\r\n\r\n    return(\r\n        <aside className={css.right}>\r\n\r\n            {/* following with the use of props -> see above comments */}\r\n            <h1>{props.data.title}</h1>\r\n            <p>{props.data.description}</p>\r\n\r\n            {previewImg}\r\n\r\n            <h3>Features</h3>\r\n\r\n            <div>\r\n                {buttons}\r\n             </div>\r\n\r\n            <button className={css.buyButton}>Buy Now</button>\r\n\r\n        </aside>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Right;","const ProductData = {\r\n    title: 'FitBit 19 - The Smartest Watch',\r\n    description: 'Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor.',\r\n    colorOptions: [\r\n        {\r\n            styleName: 'Black Strap',\r\n            imageUrl: 'https://imgur.com/iOeUBV7.png'\r\n        },\r\n        {\r\n            styleName: 'Red Strap',\r\n            imageUrl: 'https://imgur.com/PTgQlim.png'\r\n        },\r\n        {\r\n            styleName: 'Blue Strap',\r\n            imageUrl: 'https://imgur.com/Mplj1YR.png'\r\n        },\r\n        {\r\n            styleName: 'Purple Strap',\r\n            imageUrl: 'https://imgur.com/xSIK4M8.png'\r\n        },\r\n    ],\r\n    featureList: [\r\n        \"Time\", \"Heart Rate\"\r\n    ]\r\n}\r\n\r\nObject.freeze(ProductData); //This line of code just makes your object as a constant. No values can be updated.\r\n\r\nexport default ProductData;","import React from 'react';\nimport { Component } from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport './App.css';\n\nimport Header from './Header';\nimport Left from './Left';\nimport Right from './Right';\n\nimport ProductData from './ProductData';\n\nclass App extends Component {\n\n  state = {\n    prodObj: ProductData,\n    showHeart: false,\n    previewImagePos: 0,\n    selectedButton: 0,\n\n  }\n\n  //this func is created and passes as props to Right.js\n  //this is to set preview image on Left\n\n  colorOption = (pos) => {\n\n    console.log('click');\n\n    this.setState({previewImagePos: pos});\n  }\n\n  // this is to show/hide time/heart\n\n  featureDisplay = (pos) => {\n\n    //condition to update state based on which\n    //button is clicked\n\n    let updatedState = false;\n  \n    if(pos === 1){\n     updatedState = true;\n    }\n\n    this.setState({showHeart: updatedState, selectedButton: pos});\n\n  }\n\n  render() {\n\n    return (\n\n      <HashRouter basename={process.env.PUBLIC_URL}>\n\n        <div>\n          <Header></Header>\n          <main className=\"main\">\n            {/* the [] passes the pos to load image url from props obj */}\n            <Left url={this.state.prodObj.colorOptions[this.state.previewImagePos].imageUrl} \n                  showHeart={this.state.showHeart}>\n\n            </Left>\n\n            {/* data props passes the whole obj to use in Right.js */}\n            <Right data={this.state.prodObj} \n                  // this is the func passes as props to show preview imgs in Left\n                  colorOption={this.colorOption}\n                  previewImagePos={this.state.previewImagePos}\n                  // this is for the buttons\n                  featureDisplay={this.featureDisplay}\n                  // this is to handle class active for buttons\n                  selectedButton={this.state.selectedButton}>\n\n            </Right>\n    \n    \n          </main>\n    \n        </div>\n\n      </HashRouter>\n      \n    );\n\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__243p2\",\"img\":\"header_img__196Tw\"};"],"sourceRoot":""}